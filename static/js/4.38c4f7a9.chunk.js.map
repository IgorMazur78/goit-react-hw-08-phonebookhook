{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Component/Form/Form.module.css","Component/ContactList/Listcontact.module.css","Component/Filter/Filter.module.css","Component/PhoneBook/phone.module.css","redux/contacts/operationContacts.js","Component/Form/formEditor.js","redux/contacts/contactSelector.js","Component/ContactList/ListContact.js","Component/Filter/Filter.js","Component/PhoneBook/PhoneBook.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","axios","defaults","baseURL","credential","dispatch","contactAction","addContactRecuest","post","then","response","addContactSuccess","data","catch","error","addContactError","fetchContactRecuest","get","console","log","fetchContactSuccess","fetchContactError","id","deleteContactRecuest","delete","deleteContactSuccess","deleteContactError","Form","initialState","name","number","useState","state","setState","useDispatch","handelInputChange","e","target","preventDefault","className","style","formStyle","Typography","variant","formStyleTitle","formStyleFormInput","onSubmit","evt","operationContacts","onhandleAddContact","type","onChange","placeholder","autoFocus","Button","color","getitemContacts","allContacts","itemContacts","getFilter","filter","getLoading","loading","getVisibleContact","createSelector","contacts","contact","toLowerCase","includes","ListContact","useSelector","contactSelector","map","ListContactItem","buttonDeleteContact","onClick","operationContact","onDeleteContact","Filter","filterTitle","filterInput","event","filterContact","PhoneBook","isLoadingContacts","isAuthLogIn","isLogIn","useEffect","props","history","replace","phone"],"mappings":"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","file":"static/js/4.38c4f7a9.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"Form_formStyle__3Y0D_\",\"formStyleTitle\":\"Form_formStyleTitle__r9shw\",\"formStyleFormInput\":\"Form_formStyleFormInput__1qk77\",\"formStyleFormButton\":\"Form_formStyleFormButton__q33OF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContactItem\":\"Listcontact_ListContactItem__3WJmy\",\"buttonDeleteContact\":\"Listcontact_buttonDeleteContact__2plXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2_OIK\",\"filterInput\":\"Filter_filterInput__3Mmmw\",\"filterTitle\":\"Filter_filterTitle__2qZkm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone\":\"phone_phone__1iaST\"};","import axios from \"axios\";\r\nimport contactAction from \"./contactAction\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst addContacts = (credential) => (dispatch) => {\r\n  dispatch(contactAction.addContactRecuest());\r\n  axios\r\n    .post(\"/contacts\",  credential )\r\n    .then((response) => {\r\n      // console.log(response.config.headers);\r\n\r\n      dispatch(contactAction.addContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactAction.fetchContactRecuest());\r\n  axios\r\n    .get(\"/contacts\")\r\n       \r\n    .then((response) => {\r\n      console.log(response.data)\r\n      dispatch(contactAction.fetchContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.fetchContactError(error)));\r\n};\r\n\r\nconst deleteContacts = (id) => (dispatch) => {\r\n  dispatch(contactAction.deleteContactRecuest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(contactAction.deleteContactSuccess(id));\r\n    })\r\n\r\n    .catch((error) => dispatch(contactAction.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContacts,\r\n  fetchContacts,\r\n  deleteContacts,\r\n};\r\n","import React, { useState }  from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport operationContacts from \"../../redux/contacts/operationContacts\";\r\nimport { Button, Typography} from \"@material-ui/core\";\r\nimport style from \"./Form.module.css\";\r\n\r\nexport default function Form () {\r\n  const initialState = {\r\n    name: \"\", number: \"\"\r\n  }\r\n  const [state, setState] = useState(initialState) \r\n  const dispatch = useDispatch();\r\n  const handelInputChange = (e) => {\r\n    const {name,value} = e.target\r\n    e.preventDefault();\r\n    setState({...state,\r\n      [name]: value });\r\n  };\r\n\r\n const onhandleAddContact = (state) => dispatch(operationContacts.addContacts(state));\r\n    const handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onhandleAddContact(state);\r\n    setState(initialState);\r\n    console.log(state);\r\n    \r\n\r\n  };\r\n\r\n  // render() {\r\n   \r\n\r\n    return (\r\n      <div className={style.formStyle}>\r\n        <Typography variant=\"h6\" className={style.formStyleTitle}>Phonebook</Typography>\r\n        <form className={style.formStyleFormInput} onSubmit={handelSubmit}>\r\n          <label>\r\n           <Typography variant=\"h8\">Name</Typography>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={state.name}\r\n              onChange={handelInputChange}\r\n              placeholder=\"Add name\"\r\n              autoFocus\r\n            ></input>\r\n            <br />\r\n          </label>\r\n          <label>\r\n          <Typography variant=\"h8\">Number</Typography>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={state.number}\r\n              onChange={handelInputChange}\r\n              placeholder=\"Add number\"\r\n              autoFocus\r\n            ></input>\r\n          </label>\r\n          <br />\r\n          <Button  color = \"secondary\" variant=\"contained\" type=\"submit\" >\r\n            Add contact\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } \r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onhandleAddContact: (name, number) =>\r\n//       dispatch(operationContacts.addContacts(name, number)),\r\n//   };\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(Form);\r\n","import {createSelector} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst getitemContacts = (state) => state.allContacts.itemContacts;\r\nconst getFilter = (state) => state.allContacts.filter;\r\n const getLoading = (state) => state.allContacts.loading;\r\n\r\n const getVisibleContact = createSelector ([getitemContacts, getFilter], (contacts, filter ) => {\r\n    const visibleContact = contacts.filter((contact) => {\r\n        const str = contact.name.toLowerCase();\r\n        return str.includes(filter.toLowerCase());\r\n      });\r\n      return visibleContact;\r\n })\r\n\r\n\r\n\r\nexport default {\r\n    getitemContacts,\r\n    getFilter,\r\n    getLoading,\r\n    getVisibleContact\r\n}","import React, { useEffect} from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport operationContact from \"../../redux/contacts/operationContacts\";\r\nimport contactSelector from \"../../redux/contacts/contactSelector\"\r\n\r\nimport style from \"./Listcontact.module.css\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport \"./ListContactAnimation.css\";\r\n\r\n// { contact, onDeleteContact }\r\nexport default function ListContact() {\r\n  const dispatch = useDispatch();\r\n  const contact = useSelector((state) => contactSelector.getVisibleContact(state));\r\n  const onDeleteContact = (id) => dispatch(operationContact.deleteContacts(id))\r\n\r\n  return (\r\n    <ul>\r\n      \r\n      {contact.map(({ id, name, number }) => (\r\n        <li key={id} className={style.ListContactItem}>\r\n          <Typography >{name}:</Typography>\r\n          <Typography >{number}</Typography>\r\n         \r\n\r\n          <button\r\n            className={style.buttonDeleteContact}\r\n            onClick={() => onDeleteContact(id)}\r\n          ></button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contact:contactSelector.getVisibleContact(state)\r\n\r\n// })\r\n// const mapDispatchToProps = {\r\n   \r\n//   onDeleteContact: operationContact.deleteContacts,\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(ListContact);\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch } from \"react-redux\";\r\nimport contactAction from \"../../redux/contacts/contactAction\"\r\nimport contactSelector from \"../../redux/contacts/contactSelector\"\r\n\r\nimport style from \"./Filter.module.css\"\r\nimport { Typography} from \"@material-ui/core\";\r\n\r\n\r\n export default function Filter() {\r\n   const dispatch = useDispatch()\r\n  const value = useSelector(state => contactSelector.getFilter(state))\r\nconst onChange = (event) => dispatch(contactAction.filterContact(event.target.value))\r\n  return (\r\n    <form className = {style.filter}>\r\n      <Typography variant=\"h6\" className = {style.filterTitle}>Find contacts by name</Typography>\r\n      <input\r\n      className = {style.filterInput\r\n      }\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        \r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport { useHistory} from \"react-router-dom\"\r\n\r\nimport Form from \"../Form/formEditor\";\r\nimport ListContact from \"../ContactList/ListContact\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport operationContact from \"../../redux/contacts/operationContacts\";\r\nimport contactSelector from \"../../redux/contacts/contactSelector\";\r\nimport { isLogIn } from \"../../redux/auth/authSelector\";\r\nimport style from \"./phone.module.css\"\r\n\r\n\r\n//\r\nexport default function PhoneBook() {\r\nconst dispatch = useDispatch();\r\n// const history = History();\r\n\r\n// const onFetchContact = () => dispatch(operationContact.fetchContacts());\r\n// isLoadingContacts: contactSelector.getLoading(state),\r\nconst isLoadingContacts = useSelector(state => contactSelector.getLoading(state));\r\nconst isAuthLogIn = useSelector(state => isLogIn(state));\r\n\r\nuseEffect(() => {\r\n  dispatch(operationContact.fetchContacts())\r\n  if (!isAuthLogIn) {\r\n        this.props.history.replace(\"/login\");\r\n        return;\r\n  }\r\n}, [dispatch, isAuthLogIn])\r\n  // componentDidMount() {\r\n  //   this.props.onFetchContact();\r\n\r\n  //   if (!this.props.isAuthLogIn) {\r\n  //     this.props.history.replace(\"/login\");\r\n  //     return;\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   if (!this.props.isAuthLogIn) {\r\n  //     this.props.history.replace(\"/login\");\r\n  //     return;\r\n  //   }\r\n  // }\r\n\r\n\r\n    return (\r\n      <div className={style.phone}>\r\n        {isLoadingContacts && <h1>LOADING ...</h1>}\r\n        <Form />\r\n        <Filter />\r\n        <ListContact />\r\n      </div>\r\n    );\r\n  }\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isLoadingContacts: contactSelector.getLoading(state),\r\n//   isAuthLogIn: isLogIn(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onFetchContact: () => dispatch(operationContact.fetchContacts()),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n"],"sourceRoot":""}